[project]
name = "tmap-viz"
description = "A Python package for visualizing large, high-dimensional data sets."
readme = "README.md"
# keywords = ["one", "two"]
# license = { text = "BSD 3-Clause License" }
# classifiers = ["Framework :: Django", "Programming Language :: Python :: 3"]
dependencies = ["matplotlib", "annoy ~= 1.17.0", "scipy"]
dynamic = ["version"]
authors = [
  {"name" = "Daniel Probst", "email" = "daenuprobst@gmail.com"},
]
maintainers = [
  {"name" = "Frank Harrison", "email" = "doublethefish@gmail.com"},
]

[tool.cibuildwheel]
# Build all available c-python versions, for now.
# Define a range of python version, going as far back as possiblem because
# often the Phd-type developer that use tools like tmap don't update their tool
# chains very often, supporting them means that they might better support
# tmap's developement in the future.
# This may change, and probably should.
build = "cp3*"
# Skip 32-bit builds, musl build, and pypy builds
skip = ["*-manylinux_i686", "*-musllinux_*", "pp*"]

[tool.cibuildwheel.linux]
before-build = """\
  cd ./ogdf-conda/src && \
  mkdir build && \
  cd build && \
  cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${LIBOGDF_INSTALL_PATH} -DBUILD_SHARED_LIBS=ON && \
  make -j4 && \
  make install && \
  cd .. && \
  rm -r build\
  """

[tool.cibuildwheel.linux.environment]
LIBOGDF_INSTALL_PATH="$(pwd)/libOGDF"

[tool.cibuildwheel.macos]
# For now build `x86_64` and `arm64` instead of `universal2` because we currently do
# not build /usr/local/lib/libOGDF.dylib under `arm64` for some reason.
archs = ["x86_64", "arm64"]
before-all = ["brew install libomp llvm"]
# NOTE: we delete build/ here as we're build multiple wheels and we support
#       different SIMD commands on different platforms.
before-build = """\
  mkdir -p $LIBOGDF_INSTALL_PATH && \
  cd ./ogdf-conda/src && \
  mkdir -p build && \
  cd build && \
  cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=$LIBOGDF_INSTALL_PATH \
        -DBUILD_SHARED_LIBS=ON \
        && \
  make -j4 && \
  make install && \
  cd .. && \
  rm -rf build \
  """
repair-wheel-command = [
  "DYLD_LIBRARY_PATH=$LIBOGDF_INSTALL_PATH/lib delocate-listdeps {wheel}",
  "DYLD_LIBRARY_PATH=$LIBOGDF_INSTALL_PATH/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.macos.environment]
LIBOGDF_INSTALL_PATH="$(pwd)/libOGDF"
CXX="$(brew --prefix llvm)/bin/clang++"
CC="$(brew --prefix llvm)/bin/clang"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
before-build = """\
  echo %LIBOGDF_INSTALL_PATH% && \
  cd ./ogdf-conda/src && \
  mkdir build && \
  cd build && \
  cmake .. -DCMAKE_GENERATOR="Visual Studio 17 2022" -DCMAKE_INSTALL_PREFIX=%LIBOGDF_INSTALL_PATH% -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Release && \
  cmake --build . --config Release --target install -- /m && \
  cd .. && \
  rmdir /Q /S build\
  """

[tool.cibuildwheel.windows.environment]
# NOTE: if building locally you will have to build here or fixup the script to build
#       into the tmap-viz directory.
LIBOGDF_INSTALL_PATH="c:/libOGDF"
